#!/usr/bin/env python
#
# .__           .__  .__                         
# |  |__   ____ |  | |  |   ____                 
# |  |  \_/ __ \|  | |  |  /  _ \                
# |   Y  \  ___/|  |_|  |_(  <_> )               
# |___|  /\___  >____/____/\____/                
#      \/     \/                                 
#                     .__       .___      ___    
# __  _  _____________|  |    __| _/  /\  \  \   
# \ \/ \/ /  _ \_  __ \  |   / __ |   \/   \  \  
#  \     (  <_> )  | \/  |__/ /_/ |   /\    )  ) 
#   \/\_/ \____/|__|  |____/\____ |   )/   /  /  
#                                \/       /__/   
# (c) 2012 Fetal-Neonatal Neuroimaging & Developmental Science Center
#                   Boston Children's Hospital
#
#              http://childrenshospital.org/FNNDSC/
#                        dev@babyMRI.org
#

# import the plugin.py superclass
import os, sys, subprocess
sys.path.append( os.path.join(os.path.dirname(__file__), '../') )
from plugin import Plugin
sys.path.append(os.path.join(os.path.dirname(__file__), '../../lib'))
from  _common import crun
from  _common import systemMisc as misc


class HelloWorld(Plugin):
  '''
  '''
  Plugin.AUTHORS = 'FNNDSC (dev@babyMRI.org)'
  Plugin.TITLE = 'HelloWorld'
  Plugin.CATEGORY = 'System'
  Plugin.DESCRIPTION = 'Generate a message'
  Plugin.DOCUMENTATION = 'http://wiki'
  Plugin.LICENSE = 'Opensource (MIT)'
  Plugin.VERSION = '0.1'

  def run(self):
    options = self.options
    if options.message == None:
      print 'No message provided'
      print 'Exiting.'
      return

    shell = crun.crun()
    shell.echo(True)
    shell.waitForChild(True)

    newcmd = "echo %s > %s" % (options.message, 'output.txt')
    shell(newcmd)
    str_exitCode = str(shell.exitCode())
    if str_exitCode != "0":
      misc.file_writeOnce(os.path.join(self.chrisRunDir, 'ERROR-out.err'), 'Plugin returned error!')


# ENTRYPOINT
if __name__ == "__main__":
  plugin = HelloWorld()
  plugin.add_parameter('Input', Plugin.STRING, '--textBox', action='store', dest='message',
                        help='message to input')
  plugin.status = 100 # no cluster job monitoring to mark a feed instantly as done
  plugin.launch()
